def compare_files(template_file, result_file) -> int:
    """Checks if the generated simulation result file matches with 
    the stored template file.

    Args:
    - 'template_file' (string): The stored template file
    - 'result_file' (string): The result file generated by the simulations
    - 'errors' (dict): Dict of dicts containing max and min allowable errors (in percent) for each result type

    Returns:
    - 'int': 
        Returns 2 if the differences in readings are greater than max allowable error,
        Returns 1 if the differences in readings lie between the maximum and minimum allowable error range,
        Returns 0 otherwise
    """
    # commented out until simulations can be run to decide limits
    # errors = {
    #     'frequency': { 'max': 1, 'min': 0.5 },
    #     'power': { 'max': 1000, 'min': 1000 },
    #     'error': { 'max': 100, 'min': 50 },
    # }
    
    with open(template_file, 'r') as template, open(result_file, 'r') as result:
        next(template)
        next(result)

        for template_line, result_line in zip(template, result):
            template_data = [float(val) for val in template_line.split()]
            result_data = [float(val) for val in result_line.split()]
            
            freq_diff = (abs(template_data[1] - result_data[1]) / template_data[1]) * 100 if template_data[1] != 0.0 else (abs(template_data[1] - result_data[1])) * 100
            power_diff = (abs(template_data[2] - result_data[2]) / template_data[2]) * 100 if template_data[2] != 0.0 else (abs(template_data[2] - result_data[2])) * 100
            error_diff = (abs(template_data[3] - result_data[3]) / template_data[3]) * 100 if template_data[3] != 0.0 else (abs(template_data[3] - result_data[3])) * 100
            
            # if freq_diff > errors['frequency']['max'] or power_diff > errors['power']['max'] or error_diff > errors['error']['max']:
            #     return 2
            # elif freq_diff > errors['frequency']['min'] or power_diff > errors['power']['min'] or error_diff > errors['error']['min']:
            #     return 1
        return 0